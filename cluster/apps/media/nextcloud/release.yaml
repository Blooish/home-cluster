apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.5.19
      sourceRef:
        kind: HelmRepository
        name: chart-nextcloud
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 27.0.0-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: true
      className: nginx
      annotations:
        hajimari.io/appName: Nextcloud
        hajimari.io/icon: mdi:cloud-outline
        nginx.ingress.kubernetes.io/proxy-body-size: 512M
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          location ^~ /.well-known {
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav { return 301 /remote.php/dav/; }
            location = /.well-known/acme-challenge { try_files $uri $uri/ =404; }
            location = /.well-known/pki-validation { try_files $uri $uri/ =404; }
            return 301 /index.php$request_uri;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }
      hosts:
        - host: &host "nc.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - *host
    nextcloud:
      host: *host
      datadir: /var/www/data
      extraVolumes:
        downloads:
          enabled: true
          mountPath: /var/www/data
          path: /volume1/kubeNFS/nextcloud
          server: "${STORAGE_NAS_IP}"
          type: nfs
      extraEnv:
        - name: REDIS_HOST
          value: "${REDIS_HOST_ADDRESS}"
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          value: ""
      extraInitContainers:
        - name: wait-database
          image: alpine:3.18.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              value: "${POSTGRES_HOST_ADDRESS}"
        - name: wait-redis
          image: alpine:3.18.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env:
            - name: REDIS_HOST
              value: "${REDIS_HOST_ADDRESS}"
            - name: REDIS_HOST_PORT
              value: "6379"
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.25-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: "${POSTGRES_HOST_ADDRESS}:5432"
      database: nextcloud
      user: postgres
      password: "${SECRET_POSTGRES_ADMIN_PASS}"
    persistence:
      config:
        enabled: true
        existingClaim: nextcloud-config
      downloads:
        enabled: true
        mountPath: /var/www/data
        path: /volume1/kubeNFS/nextcloud
        server: "${STORAGE_NAS_IP}"
        type: nfs
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
    cronjob:
      enabled: true
    resources:
      requests:
        cpu: 34m
        memory: 204Mi
      limits:
        memory: 363Mi
